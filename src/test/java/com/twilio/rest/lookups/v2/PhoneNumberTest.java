/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.lookups.v2;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.twilio.Twilio;
import com.twilio.converter.DateConverter;
import com.twilio.converter.Promoter;
import com.twilio.exception.TwilioException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import mockit.Mocked;
import mockit.NonStrictExpectations;
import org.junit.Before;
import org.junit.Test;

import java.net.URI;

import static com.twilio.TwilioTest.serialize;
import static org.junit.Assert.*;

public class PhoneNumberTest {
    @Mocked
    private TwilioRestClient twilioRestClient;

    @Before
    public void setUp() throws Exception {
        Twilio.init("AC123", "AUTH TOKEN");
    }

    @Test
    public void testFetchRequest() {
        new NonStrictExpectations() {{
            Request request = new Request(HttpMethod.GET,
                                          Domains.LOOKUPS.toString(),
                                          "/v2/PhoneNumbers/phone_number");

            twilioRestClient.request(request);
            times = 1;
            result = new Response("", 500);
            twilioRestClient.getAccountSid();
            result = "AC123";
        }};

        try {
            PhoneNumber.fetcher("phone_number").fetch();
            fail("Expected TwilioException to be thrown for 500");
        } catch (TwilioException e) {}
    }

    @Test
    public void testFetchResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"1\",\"country_code\": \"US\",\"phone_number\": \"+14159929960\",\"national_format\": \"(415) 992-9960\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+14159929960\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchInvalidResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": null,\"country_code\": null,\"phone_number\": \"+141599299600\",\"national_format\": null,\"valid\": false,\"validation_errors\": [\"TOO_LONG\"],\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+141599299600\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchCallerNameResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"1\",\"country_code\": \"US\",\"phone_number\": \"+14159929960\",\"national_format\": \"(415) 992-9960\",\"valid\": true,\"validation_errors\": null,\"caller_name\": {\"caller_name\": \"Sergio Suarez\",\"caller_type\": \"CONSUMER\",\"error_code\": null},\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+14159929960\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchSimSwapResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": {\"last_sim_swap\": {\"last_sim_swap_date\": \"2020-04-27T10:18:50Z\",\"swapped_period\": \"PT15282H33M44S\",\"swapped_in_period\": true},\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchSimSwapWithoutLastSimSwapDateResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": {\"last_sim_swap\": {\"last_sim_swap_date\": null,\"swapped_period\": \"PT24H\",\"swapped_in_period\": true},\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchSimSwapWithFalseSwappedResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": {\"last_sim_swap\": {\"last_sim_swap_date\": null,\"swapped_period\": \"PT24H\",\"swapped_in_period\": false},\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchCallForwardingResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": {\"call_forwarding_status\": \"true\",\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchSimSwapAndCallForwardingResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": {\"last_sim_swap\": {\"last_sim_swap_date\": \"2020-11-05T20:52:09.322Z\",\"swapped_period\": \"PT24H\",\"swapped_in_period\": true},\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"call_forwarding\": {\"call_forwarding_status\": \"true\",\"carrier_name\": \"Vodafone UK\",\"mobile_country_code\": \"276\",\"mobile_network_code\": \"02\",\"error_code\": null},\"live_activity\": null,\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchLiveActivityConnectivityResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": {\"connectivity\": \"connected\",\"original_carrier\": {\"name\": \"Vodafone\",\"mobile_country_code\": \"234\",\"mobile_network_code\": \"15\"},\"ported\": \"false\",\"ported_carrier\": null,\"roaming\": \"false\",\"roaming_carrier\": null,\"error_code\": null},\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchLiveActivityPortingResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": {\"connectivity\": \"connected\",\"original_carrier\": {\"name\": \"Vodafone\",\"mobile_country_code\": \"234\",\"mobile_network_code\": \"15\"},\"ported\": \"true\",\"ported_carrier\": {\"name\": \"Orange\",\"mobile_country_code\": \"266\",\"mobile_network_code\": \"10\"},\"roaming\": \"false\",\"roaming_carrier\": null,\"error_code\": null},\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchLiveActivityRoamingResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"44\",\"country_code\": \"GB\",\"phone_number\": \"+447772000001\",\"national_format\": \"07772 000001\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": {\"connectivity\": \"connected\",\"original_carrier\": {\"name\": \"Vodafone\",\"mobile_country_code\": \"234\",\"mobile_network_code\": \"15\"},\"ported\": \"false\",\"ported_carrier\": null,\"roaming\": \"true\",\"roaming_carrier\": {\"name\": \"Orange\",\"mobile_country_code\": \"266\",\"mobile_network_code\": \"10\",\"country_code\": \"RO\"},\"error_code\": null},\"enhanced_line_type\": null,\"line_type_intelligence\": null,\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+447772000001\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchEnhancedLineTypeResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"1\",\"country_code\": \"US\",\"phone_number\": \"+14159929960\",\"national_format\": \"(415) 992-9960\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": {\"error_code\": null,\"mobile_country_code\": \"240\",\"mobile_network_code\": \"38\",\"carrier_name\": \"Twilio - SMS/MMS-SVR\",\"type\": \"nonFixedVoip\"},\"line_type_intelligence\": {\"error_code\": null,\"mobile_country_code\": \"240\",\"mobile_network_code\": \"38\",\"carrier_name\": \"Twilio - SMS/MMS-SVR\",\"type\": \"nonFixedVoip\"},\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+14159929960\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }

    @Test
    public void testFetchLineTypeIntelligenceResponse() {
        new NonStrictExpectations() {{
            twilioRestClient.request((Request) any);
            result = new Response("{\"calling_country_code\": \"1\",\"country_code\": \"US\",\"phone_number\": \"+14159929960\",\"national_format\": \"(415) 992-9960\",\"valid\": true,\"validation_errors\": null,\"caller_name\": null,\"sim_swap\": null,\"call_forwarding\": null,\"live_activity\": null,\"enhanced_line_type\": {\"error_code\": null,\"mobile_country_code\": \"240\",\"mobile_network_code\": \"38\",\"carrier_name\": \"Twilio - SMS/MMS-SVR\",\"type\": \"nonFixedVoip\"},\"line_type_intelligence\": {\"error_code\": null,\"mobile_country_code\": \"240\",\"mobile_network_code\": \"38\",\"carrier_name\": \"Twilio - SMS/MMS-SVR\",\"type\": \"nonFixedVoip\"},\"url\": \"https://lookups.twilio.com/v2/PhoneNumbers/+14159929960\"}", TwilioRestClient.HTTP_STATUS_CODE_OK);
            twilioRestClient.getObjectMapper();
            result = new ObjectMapper();
        }};

        assertNotNull(PhoneNumber.fetcher("phone_number").fetch());
    }
}